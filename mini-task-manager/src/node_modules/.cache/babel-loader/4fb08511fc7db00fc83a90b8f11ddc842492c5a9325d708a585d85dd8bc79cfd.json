{"ast":null,"code":"var _jsxFileName = \"/Users/lukebloomfield/mini-task-manager/src/src/App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { getTasks, addTask, deleteTask, updateTask } from './utils/api';\nimport TaskList from './components/TaskList';\nimport AddTaskForm from './components/AddTaskForm';\nimport FilterBar from './components/FilterBar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  const [filter, setFilter] = useState({\n    from: '',\n    to: ''\n  });\n  const [currentPage, setCurrentPage] = useState(1);\n  const tasksPerPage = 20;\n  useEffect(() => {\n    fetchTasks();\n  }, []);\n  const fetchTasks = async () => {\n    const data = await getTasks();\n    setTasks(data);\n  };\n  const handleAdd = async title => {\n    const newTask = {\n      title,\n      description: \"N/A\",\n      complete: false,\n      created: new Date().toISOString()\n    };\n    await addTask(newTask);\n    fetchTasks();\n  };\n  const handleDelete = async id => {\n    await deleteTask(id);\n    fetchTasks();\n  };\n  const handleComplete = async id => {\n    await updateTask(id, {\n      complete: true\n    });\n    console.log(\"Completing task:\", id);\n    fetchTasks();\n  };\n  const filteredTasks = tasks.filter(task => {\n    const createdDate = new Date(task.created);\n    const fromDate = filter.from ? new Date(filter.from) : null;\n    const toDate = filter.to ? new Date(filter.to) : null;\n    return (!fromDate || createdDate >= fromDate) && (!toDate || createdDate <= toDate);\n  });\n  const start = (currentPage - 1) * tasksPerPage;\n  const end = start + tasksPerPage;\n  const paginatedTasks = filteredTasks.slice(start, end);\n  console.log(\"Completing task:\", id);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Task Manager\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AddTaskForm, {\n      onAdd: handleAdd\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FilterBar, {\n      filter: filter,\n      setFilter: setFilter\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TaskList, {\n      tasks: paginatedTasks,\n      onDelete: handleDelete,\n      onComplete: handleComplete\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"GgjSR9z2IOq1799JSzpWuV730ck=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","getTasks","addTask","deleteTask","updateTask","TaskList","AddTaskForm","FilterBar","jsxDEV","_jsxDEV","App","_s","tasks","setTasks","filter","setFilter","from","to","currentPage","setCurrentPage","tasksPerPage","fetchTasks","data","handleAdd","title","newTask","description","complete","created","Date","toISOString","handleDelete","id","handleComplete","console","log","filteredTasks","task","createdDate","fromDate","toDate","start","end","paginatedTasks","slice","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onAdd","onDelete","onComplete","_c","$RefreshReg$"],"sources":["/Users/lukebloomfield/mini-task-manager/src/src/App.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Task } from './types/Task';\nimport { getTasks, addTask, deleteTask, updateTask } from './utils/api';\nimport TaskList from './components/TaskList';\nimport AddTaskForm from './components/AddTaskForm';\nimport FilterBar from './components/FilterBar';\n\nconst App: React.FC = () => {\n  const [tasks, setTasks] = useState<Task[]>([]);\n  const [filter, setFilter] = useState({ from: '', to: '' });\n  const [currentPage, setCurrentPage] = useState(1);\n  const tasksPerPage = 20;\n\n  useEffect(() => {\n    fetchTasks();\n  }, []);\n\n  const fetchTasks = async () => {\n    const data = await getTasks();\n    setTasks(data as Task[]);\n  };\n\n  const handleAdd = async (title: string) => {\n    const newTask = { title, description: \"N/A\", complete: false, created: new Date().toISOString() };\n    await addTask(newTask);\n    fetchTasks();\n  };\n\n  const handleDelete = async (id: number) => {\n    await deleteTask(id);\n    fetchTasks();\n  };\n\n  const handleComplete = async (id: number) => {\n    await updateTask(id, { complete: true });\n    console.log(\"Completing task:\", id);\n    fetchTasks();\n  };\n\n  const filteredTasks = tasks.filter(task => {\n    const createdDate = new Date(task.created);\n    const fromDate = filter.from ? new Date(filter.from) : null;\n    const toDate = filter.to ? new Date(filter.to) : null;\n\n    return (!fromDate || createdDate >= fromDate) &&\n           (!toDate || createdDate <= toDate);\n  });\n\n  const start = (currentPage - 1) * tasksPerPage;\n  const end = start + tasksPerPage;\n  const paginatedTasks = filteredTasks.slice(start, end);\n  console.log(\"Completing task:\", id);\n\n  return (\n    <div className=\"App\">\n      <h1>Task Manager</h1>\n      <AddTaskForm onAdd={handleAdd} />\n      <FilterBar filter={filter} setFilter={setFilter} />\n      <TaskList tasks={paginatedTasks} onDelete={handleDelete} onComplete={handleComplete} />\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}